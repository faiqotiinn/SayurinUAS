// Generated by view binder compiler. Do not edit!
package com.example.sayursegar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sayursegar.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final EditText passField;

  @NonNull
  public final TextView passwordtextView;

  @NonNull
  public final TextView registtextView;

  @NonNull
  public final EditText usernameField;

  @NonNull
  public final TextView usernametextview;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout fragmentContainer, @NonNull Button loginButton,
      @NonNull EditText passField, @NonNull TextView passwordtextView,
      @NonNull TextView registtextView, @NonNull EditText usernameField,
      @NonNull TextView usernametextview) {
    this.rootView = rootView;
    this.fragmentContainer = fragmentContainer;
    this.loginButton = loginButton;
    this.passField = passField;
    this.passwordtextView = passwordtextView;
    this.registtextView = registtextView;
    this.usernameField = usernameField;
    this.usernametextview = usernametextview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragmentContainer;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.passField;
      EditText passField = ViewBindings.findChildViewById(rootView, id);
      if (passField == null) {
        break missingId;
      }

      id = R.id.passwordtextView;
      TextView passwordtextView = ViewBindings.findChildViewById(rootView, id);
      if (passwordtextView == null) {
        break missingId;
      }

      id = R.id.registtextView;
      TextView registtextView = ViewBindings.findChildViewById(rootView, id);
      if (registtextView == null) {
        break missingId;
      }

      id = R.id.usernameField;
      EditText usernameField = ViewBindings.findChildViewById(rootView, id);
      if (usernameField == null) {
        break missingId;
      }

      id = R.id.usernametextview;
      TextView usernametextview = ViewBindings.findChildViewById(rootView, id);
      if (usernametextview == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, fragmentContainer, loginButton,
          passField, passwordtextView, registtextView, usernameField, usernametextview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
